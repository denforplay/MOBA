@startuml
interface IWindowStateProvider {
}
class TimelineWindow <<partial>> {
    m_LastFrameHadSequence : bool
    m_ForceRefreshLastSelection : bool
    m_CurrentSceneHashCode : int
    m_HasBeenInitialized : bool
    + isDragging : bool <<get>> <<set>>
    + <<override>> locked : bool <<get>> <<set>>
    + hierarchyChangedThisFrame : bool <<get>>
    + TimelineWindow()
    OnLockStateChanged(locked:bool) : void
    OnEnable() : void
    OnDisable() : void
    OnDestroy() : void
    OnLostFocus() : void
    OnHierarchyChange() : void
    OnStateChange() : void
    OnGUI() : void
    UpdateTitle() : void
    {static} DetectStylesChange() : void
    DetectActiveSceneChanges() : void
    DetectStateChanges() : void
    Initialize() : void
    RefreshLastSelectionIfRequired() : void
    InitializeGUIIfRequired() : void
    UpdateGUIConstants() : void
    UpdateViewStateHash() : void
    {static} PerformUndo() : bool
    + RebuildGraphIfNecessary(evaluate:bool) : void
    + <<new>> RepaintImmediately() : void
    + {static} CreateNewTimeline() : void
    + {static} ShowWindow() : void
    + {static} OnDoubleClick(instanceID:int, line:int) : bool
    + <<virtual>> AddItemsToMenu(menu:GenericMenu) : void
}
class TimelineWindowPreferences {
}
class "List`1"<T> {
}
class DoCreateTimeline {
    + <<override>> Action(instanceId:int, pathName:string, resourceFile:string) : void
}
IWindowStateProvider --> "windowState" IWindowState
TimelineEditorWindow <|-- TimelineWindow
IHasCustomMenu <|-- TimelineWindow
IWindowStateProvider <|-- TimelineWindow
TimelineWindow o-> "m_Preferences" TimelineWindowPreferences
TimelineWindow --> "preferences" TimelineWindowPreferences
TimelineWindow o-> "m_PreviewResizer" PreviewResizer
TimelineWindow --> "m_SequenceHierarchy" SequenceHierarchy
TimelineWindow --> "s_LastHierarchy" SequenceHierarchy
TimelineWindow --> "instance" TimelineWindow
TimelineWindow --> "clientArea" Rect
TimelineWindow --> "styles" DirectorStyles
TimelineWindow --> "allTracks<TimelineTrackBaseGUI>" "List`1"
TimelineWindow --> "state" WindowState
TimelineWindow --> "windowState" IWindowState
TimelineWindow +-- TimelineWindowPreferences
TimelineWindowPreferences o-> "timeReferenceMode" TimeReferenceMode
TimelineWindow +-- DoCreateTimeline
@enduml
