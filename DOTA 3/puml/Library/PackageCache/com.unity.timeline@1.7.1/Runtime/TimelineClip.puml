@startuml
interface ITimelineClipAsset {
}
class TimelineClip <<partial>> {
    + {static} <<readonly>> kDefaultClipDurationInSeconds : float = 5
    + {static} <<readonly>> kTimeScaleMin : double
    + {static} <<readonly>> kTimeScaleMax : double = 1000
    m_Start : double
    m_ClipIn : double
    m_Duration : double
    m_TimeScale : double = 1.0
    m_EaseInDuration : double
    m_EaseOutDuration : double
    m_BlendInDuration : double
    m_BlendOutDuration : double
    m_Recordable : bool
    m_PostExtrapolationTime : double
    m_PreExtrapolationTime : double
    m_DisplayName : string
    + hasPreExtrapolation : bool <<get>>
    + hasPostExtrapolation : bool <<get>>
    + timeScale : double <<get>> <<set>>
    + start : double <<get>> <<set>>
    + duration : double <<get>> <<set>>
    + end : double <<get>>
    + clipIn : double <<get>> <<set>>
    + displayName : string <<get>> <<set>>
    + clipAssetDuration : double <<get>>
    defaultCurvesName : string <<get>>
    + hasCurves : bool <<get>>
    + GetParentTrack() : TrackAsset
    + easeInDuration : double <<get>> <<set>>
    + easeOutDuration : double <<get>> <<set>>
    + eastOutTime : double <<get>>
    + easeOutTime : double <<get>>
    + blendInDuration : double <<get>> <<set>>
    + blendOutDuration : double <<get>> <<set>>
    + hasBlendIn : bool <<get>>
    + hasBlendOut : bool <<get>>
    + mixInPercentage : float <<get>>
    + mixInDuration : double <<get>>
    + mixOutTime : double <<get>>
    + mixOutDuration : double <<get>>
    + mixOutPercentage : float <<get>>
    + recordable : bool <<get>> <<internal set>>
    + EvaluateMixOut(time:double) : float
    + EvaluateMixIn(time:double) : float
    {static} GetDefaultMixInCurve() : AnimationCurve
    {static} GetDefaultMixOutCurve() : AnimationCurve
    + ToLocalTime(time:double) : double
    + ToLocalTimeUnbound(time:double) : double
    {static} SanitizeTimeValue(value:double, defaultValue:double) : double
    + IsExtrapolatedTime(sequenceTime:double) : bool
    + IsPreExtrapolatedTime(sequenceTime:double) : bool
    + IsPostExtrapolatedTime(sequenceTime:double) : bool
    + extrapolatedStart : double <<get>>
    + extrapolatedDuration : double <<get>>
    {static} GetExtrapolatedTime(time:double, mode:ClipExtrapolation, duration:double) : double
    + CreateCurves(curvesClipName:string) : void
    OnBeforeSerialize() : void
    OnAfterDeserialize() : void
    + <<override>> ToString() : string
    + ConformEaseValues() : void
    {static} CalculateEasingRatio(easeIn:double, easeOut:double) : double
    UpdateDirty(oldValue:double, newValue:double) : void
}
enum ClipExtrapolation {
    None,
    Hold,
    Loop,
    PingPong,
    Continue,
}
enum BlendCurveMode {
    Auto,
    Manual,
}
class "List`1"<T> {
}
ITimelineClipAsset --> "clipCaps" ClipCaps
ICurvesOwner <|-- TimelineClip
ISerializationCallbackReceiver <|-- TimelineClip
TimelineClip o-> "kDefaultClipCaps" ClipCaps
TimelineClip --> "m_Asset" Object
TimelineClip --> "m_ParentTrack" TrackAsset
TimelineClip --> "m_MixInCurve" AnimationCurve
TimelineClip --> "m_MixOutCurve" AnimationCurve
TimelineClip o-> "m_BlendInCurveMode" BlendCurveMode
TimelineClip o-> "m_BlendOutCurveMode" BlendCurveMode
TimelineClip --> "m_ExposedParameterNames<string>" "List`1"
TimelineClip --> "m_AnimationCurves" AnimationClip
TimelineClip --> "m_PostExtrapolationMode" ClipExtrapolation
TimelineClip --> "m_PreExtrapolationMode" ClipExtrapolation
TimelineClip --> "curves" AnimationClip
TimelineClip --> "asset" Object
TimelineClip --> "assetOwner" Object
TimelineClip --> "targetTrack" TrackAsset
TimelineClip --> "underlyingAsset" Object
TimelineClip --> "parentTrack" TrackAsset
TimelineClip --> "blendInCurveMode" BlendCurveMode
TimelineClip --> "blendOutCurveMode" BlendCurveMode
TimelineClip --> "mixInCurve" AnimationCurve
TimelineClip --> "mixOutCurve" AnimationCurve
TimelineClip --> "exposedParameters<string>" "List`1"
TimelineClip --> "clipCaps" ClipCaps
TimelineClip --> "animationClip" AnimationClip
TimelineClip --> "postExtrapolationMode" ClipExtrapolation
TimelineClip --> "preExtrapolationMode" ClipExtrapolation
TimelineClip +-- ClipExtrapolation
TimelineClip +-- BlendCurveMode
@enduml
