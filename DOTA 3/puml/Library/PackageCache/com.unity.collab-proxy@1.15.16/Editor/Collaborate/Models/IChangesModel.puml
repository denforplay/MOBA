@startuml
interface IChangesModel {
     <<event>> UpdatedChangeList : Action 
     <<event>> OnUpdatedSelectedChanges : Action 
     <<event>> BusyStatusUpdated : Action<bool> 
    SavedRevisionSummary : string <<get>> <<set>>
    SavedSearchQuery : string <<get>> <<set>>
    ToggledCount : int <<get>>
    TotalCount : int <<get>>
    ConflictedCount : int <<get>>
    Conflicted : bool <<get>>
    Busy : bool <<get>>
    RequestInitialData() : void
    UpdateEntryToggle(path:string, toggled:bool) : bool
    GetToggledEntries(query:string) : IReadOnlyList<IChangeEntryData>
    GetUntoggledEntries(query:string) : IReadOnlyList<IChangeEntryData>
    GetAllEntries(query:string) : IReadOnlyList<IChangeEntryData>
    GetConflictedEntries(query:string) : IReadOnlyList<IChangeEntryData>
    RequestDiffChanges(path:string) : void
    RequestDiscard(entry:IChangeEntry) : void
    RequestBulkDiscard(entries:IReadOnlyList<IChangeEntry>) : void
    RequestPublish(message:string, changes:IReadOnlyList<IChangeEntry>) : void
    RequestShowConflictedDifferences(path:string) : void
    RequestChooseMerge(path:string) : void
    RequestChooseMine(paths:string[]) : void
    RequestChooseRemote(paths:string[]) : void
}
IModel <|-- IChangesModel
@enduml
