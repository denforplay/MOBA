@startuml
class HableCurve {
    + whitePoint : float <<get>>
    + inverseWhitePoint : float <<get>>
    + x0 : float <<get>>
    + x1 : float <<get>>
    + HableCurve()
    + Eval(x:float) : float
    + Init(toeStrength:float, toeLength:float, shoulderStrength:float, shoulderLength:float, shoulderAngle:float, gamma:float) : void
    InitSegments(srcParams:DirectParams) : void
    SolveAB(lnA:float, B:float, x0:float, y0:float, m:float) : void
    AsSlopeIntercept(m:float, b:float, x0:float, x1:float, y0:float, y1:float) : void
    EvalDerivativeLinearGamma(m:float, b:float, g:float, x:float) : float
}
class Segment {
    + offsetX : float
    + offsetY : float
    + scaleX : float
    + scaleY : float
    + lnA : float
    + B : float
    + Eval(x:float) : float
}
class DirectParams <<struct>> {
}
class Uniforms {
}
HableCurve --> "uniforms" Uniforms
HableCurve +-- Segment
HableCurve +-- DirectParams
HableCurve +-- Uniforms
Uniforms --> "parent" HableCurve
Uniforms --> "curve" Vector4
Uniforms --> "toeSegmentA" Vector4
Uniforms --> "toeSegmentB" Vector4
Uniforms --> "midSegmentA" Vector4
Uniforms --> "midSegmentB" Vector4
Uniforms --> "shoSegmentA" Vector4
Uniforms --> "shoSegmentB" Vector4
@enduml
