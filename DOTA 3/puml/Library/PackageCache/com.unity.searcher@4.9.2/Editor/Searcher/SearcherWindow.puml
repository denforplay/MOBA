@startuml
class SearcherWindow {
    <<const>> k_DatabaseDirectory : string = "/../Library/Searcher"
    {static} <<readonly>> k_SearcherDefaultWidth : float = 300
    {static} <<readonly>> k_DetailsDefaultWidth : float = 200
    {static} <<readonly>> k_DefaultHeight : float = 300
    m_IsMouseDownOnResizer : bool
    m_IsMouseDownOnTitle : bool
    + {static} Show(host:EditorWindow, items:IList<SearcherItem>, title:string, itemSelectedDelegate:Func<SearcherItem, bool>, displayPosition:Vector2, align:Alignment) : void
    + {static} Show(host:EditorWindow, items:IList<SearcherItem>, adapter:ISearcherAdapter, itemSelectedDelegate:Func<SearcherItem, bool>, displayPosition:Vector2, analyticsDataDelegate:Action<Searcher.AnalyticsEvent>, align:Alignment) : void
    + {static} Show(host:EditorWindow, items:IList<SearcherItem>, title:string, directoryPath:string, itemSelectedDelegate:Func<SearcherItem, bool>, displayPosition:Vector2, align:Alignment) : void
    + {static} Show(host:EditorWindow, items:IEnumerable<SearcherItem>, adapter:ISearcherAdapter, directoryPath:string, itemSelectedDelegate:Func<SearcherItem, bool>, displayPosition:Vector2, analyticsDataDelegate:Action<Searcher.AnalyticsEvent>, align:Alignment) : void
    + {static} Show(host:EditorWindow, searcher:Searcher, itemSelectedDelegate:Func<SearcherItem, bool>, displayPosition:Vector2, analyticsDataDelegate:Action<Searcher.AnalyticsEvent>, align:Alignment) : void
    + {static} Show(host:EditorWindow, searcher:Searcher, itemSelectedDelegate:Func<SearcherItem, bool>, analyticsDataDelegate:Action<Searcher.AnalyticsEvent>, rect:Rect) : void
    + {static} GetPositionWithAlignment(pos:Vector2, size:Vector2, align:Alignment) : Vector2
    {static} GetPosition(host:EditorWindow, displayPosition:Vector2, align:Alignment) : Vector2
    OnEnable() : void
    OnDisable() : void
    OnTitleMouseDown(evt:MouseDownEvent) : void
    OnTitleMouseUp(evt:MouseUpEvent) : void
    FinishMove() : void
    OnTitleMouseMove(evt:MouseMoveEvent) : void
    OnResizerMouseDown(evt:MouseDownEvent) : void
    OnResizerMouseUp(evt:MouseUpEvent) : void
    FinishResize() : void
    OnResizerMouseMove(evt:MouseMoveEvent) : void
    OnSearcherKeyDown(evt:KeyDownEvent) : void
    OnGUI() : void
    SelectionCallback(item:SearcherItem) : void
    OnAnalyticsDataCallback(item:Searcher.AnalyticsEvent) : void
    OnLostFocus() : void
    HackDueToCloseOnLostFocusCrashing() : void
}
class Alignment <<struct>> {
    + Alignment(v:Vertical, h:Horizontal)
}
class "IEnumerable`1"<T> {
}
class "Func`2"<T1,T2> {
}
class "Action`1"<T> {
}
enum Horizontal {
    Left= 0,
    Center,
    Right,
}
enum Vertical {
    Top= 0,
    Center,
    Bottom,
}
EditorWindow <|-- SearcherWindow
SearcherWindow o-> "k_MinSize" Vector2
SearcherWindow o-> "s_Size" Vector2
SearcherWindow --> "s_Items<SearcherItem>" "IEnumerable`1"
SearcherWindow --> "s_Searcher" Searcher
SearcherWindow --> "s_ItemSelectedDelegate<SearcherItem,bool>" "Func`2"
SearcherWindow --> "m_AnalyticsDataDelegate<Searcher.AnalyticsEvent>" "Action`1"
SearcherWindow --> "m_SearcherControl" SearcherControl
SearcherWindow --> "m_OriginalMousePos" Vector2
SearcherWindow --> "m_OriginalWindowPos" Rect
SearcherWindow --> "m_NewWindowPos" Rect
SearcherWindow --> "m_FocusedBefore" Focusable
SearcherWindow --> "Size" Vector2
SearcherWindow +-- Alignment
Alignment --> "vertical" Vertical
Alignment --> "horizontal" Horizontal
Alignment +-- Horizontal
Alignment +-- Vertical
@enduml
