@startuml
class InputSettings <<partial>> {
    + compensateForScreenOrientation : bool <<get>> <<set>>
    + filterNoiseOnCurrent : bool <<get>> <<set>>
    + defaultDeadzoneMin : float <<get>> <<set>>
    + defaultDeadzoneMax : float <<get>> <<set>>
    + defaultButtonPressPoint : float <<get>> <<set>>
    + buttonReleaseThreshold : float <<get>> <<set>>
    + defaultTapTime : float <<get>> <<set>>
    + defaultSlowTapTime : float <<get>> <<set>>
    + defaultHoldTime : float <<get>> <<set>>
    + tapRadius : float <<get>> <<set>>
    + multiTapDelayTime : float <<get>> <<set>>
    + maxEventBytesPerUpdate : int <<get>> <<set>>
    + maxQueuedEventsPerUpdate : int <<get>> <<set>>
    + disableRedundantEventsMerging : bool <<get>> <<set>>
    + SetInternalFeatureFlag(featureName:string, enabled:bool) : void
}
class "ReadOnlyArray`1"<T> {
}
enum UpdateMode {
    ProcessEventsInDynamicUpdate= 1,
    ProcessEventsInFixedUpdate,
    ProcessEventsManually,
}
enum BackgroundBehavior {
    ResetAndDisableNonBackgroundDevices= 0,
    ResetAndDisableAllDevices= 1,
    IgnoreFocus= 2,
}
enum EditorInputBehaviorInPlayMode {
    PointersAndKeyboardsRespectGameViewFocus,
    AllDevicesRespectGameViewFocus,
    AllDeviceInputAlwaysGoesToGameView,
}
ScriptableObject <|-- InputSettings
InputSettings --> "updateMode" UpdateMode
InputSettings --> "backgroundBehavior" BackgroundBehavior
InputSettings --> "editorInputBehaviorInPlayMode" EditorInputBehaviorInPlayMode
InputSettings --> "supportedDevices<string>" "ReadOnlyArray`1"
InputSettings +-- UpdateMode
InputSettings +-- BackgroundBehavior
InputSettings +-- EditorInputBehaviorInPlayMode
@enduml
