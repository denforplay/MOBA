@startuml
class UniTaskAsyncEnumerable <<static>> <<partial>> {
    + {static} FirstAsync(source:IUniTaskAsyncEnumerable<TSource>, cancellationToken:CancellationToken) : UniTask<TSource>
    + {static} FirstAsync(source:IUniTaskAsyncEnumerable<TSource>, predicate:Func<TSource, Boolean>, cancellationToken:CancellationToken) : UniTask<TSource>
    + {static} FirstAwaitAsync(source:IUniTaskAsyncEnumerable<TSource>, predicate:Func<TSource, UniTask<Boolean>>, cancellationToken:CancellationToken) : UniTask<TSource>
    + {static} FirstAwaitWithCancellationAsync(source:IUniTaskAsyncEnumerable<TSource>, predicate:Func<TSource, CancellationToken, UniTask<Boolean>>, cancellationToken:CancellationToken) : UniTask<TSource>
    + {static} FirstOrDefaultAsync(source:IUniTaskAsyncEnumerable<TSource>, cancellationToken:CancellationToken) : UniTask<TSource>
    + {static} FirstOrDefaultAsync(source:IUniTaskAsyncEnumerable<TSource>, predicate:Func<TSource, Boolean>, cancellationToken:CancellationToken) : UniTask<TSource>
    + {static} FirstOrDefaultAwaitAsync(source:IUniTaskAsyncEnumerable<TSource>, predicate:Func<TSource, UniTask<Boolean>>, cancellationToken:CancellationToken) : UniTask<TSource>
    + {static} FirstOrDefaultAwaitWithCancellationAsync(source:IUniTaskAsyncEnumerable<TSource>, predicate:Func<TSource, CancellationToken, UniTask<Boolean>>, cancellationToken:CancellationToken) : UniTask<TSource>
}
class First <<static>> {
    + {static} <<async>> FirstAsync(source:IUniTaskAsyncEnumerable<TSource>, cancellationToken:CancellationToken, defaultIfEmpty:bool) : UniTask<TSource>
    + {static} <<async>> FirstAsync(source:IUniTaskAsyncEnumerable<TSource>, predicate:Func<TSource, Boolean>, cancellationToken:CancellationToken, defaultIfEmpty:bool) : UniTask<TSource>
    + {static} <<async>> FirstAwaitAsync(source:IUniTaskAsyncEnumerable<TSource>, predicate:Func<TSource, UniTask<Boolean>>, cancellationToken:CancellationToken, defaultIfEmpty:bool) : UniTask<TSource>
    + {static} <<async>> FirstAwaitWithCancellationAsync(source:IUniTaskAsyncEnumerable<TSource>, predicate:Func<TSource, CancellationToken, UniTask<Boolean>>, cancellationToken:CancellationToken, defaultIfEmpty:bool) : UniTask<TSource>
}
@enduml
