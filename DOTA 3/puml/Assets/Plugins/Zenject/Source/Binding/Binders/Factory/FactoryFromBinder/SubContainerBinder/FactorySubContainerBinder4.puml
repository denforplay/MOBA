@startuml
class "FactorySubContainerBinder`5"<TParam1,TParam2,TParam3,TParam4,TContract> {
    + FactorySubContainerBinder(bindContainer:DiContainer, bindInfo:BindInfo, factoryBindInfo:FactoryBindInfo, subIdentifier:object)
    + ByMethod(installerMethod:ModestTree.Util.
#endif
            Action<DiContainer, TParam1, TParam2, TParam3, TParam4>) : ScopeConcreteIdArgConditionCopyNonLazyBinder
    + ByNewGameObjectMethod(installerMethod:ModestTree.Util.
#endif
            Action<DiContainer, TParam1, TParam2, TParam3, TParam4>) : NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder
    + ByNewPrefabMethod(prefabGetter:Func<InjectContext, UnityEngine.Object>, installerMethod:ModestTree.Util.
#endif
            Action<DiContainer, TParam1, TParam2, TParam3, TParam4>) : NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder
    + ByNewPrefabMethod(prefab:UnityEngine.Object, installerMethod:ModestTree.Util.
#endif
            Action<DiContainer, TParam1, TParam2, TParam3, TParam4>) : NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder
    + ByNewPrefabResourceMethod(resourcePath:string, installerMethod:ModestTree.Util.
#endif
            Action<DiContainer, TParam1, TParam2, TParam3, TParam4>) : NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder
}
class "FactorySubContainerBinderWithParams`1"<T> {
}
"FactorySubContainerBinderWithParams`1" "<TContract>" <|-- "FactorySubContainerBinder`5"
@enduml
